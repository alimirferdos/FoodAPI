# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Nutrient(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, label: str=None, quantity: float=None, unit: str=None):  # noqa: E501
        """Nutrient - a model defined in Swagger

        :param label: The label of this Nutrient.  # noqa: E501
        :type label: str
        :param quantity: The quantity of this Nutrient.  # noqa: E501
        :type quantity: float
        :param unit: The unit of this Nutrient.  # noqa: E501
        :type unit: str
        """
        self.swagger_types = {
            'label': str,
            'quantity': float,
            'unit': str
        }

        self.attribute_map = {
            'label': 'label',
            'quantity': 'quantity',
            'unit': 'unit'
        }
        self._label = label
        self._quantity = quantity
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt) -> 'Nutrient':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The nutrient of this Nutrient.  # noqa: E501
        :rtype: Nutrient
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self) -> str:
        """Gets the label of this Nutrient.

        Display label  # noqa: E501

        :return: The label of this Nutrient.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this Nutrient.

        Display label  # noqa: E501

        :param label: The label of this Nutrient.
        :type label: str
        """

        self._label = label

    @property
    def quantity(self) -> float:
        """Gets the quantity of this Nutrient.

        Quantity of specified units  # noqa: E501

        :return: The quantity of this Nutrient.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: float):
        """Sets the quantity of this Nutrient.

        Quantity of specified units  # noqa: E501

        :param quantity: The quantity of this Nutrient.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def unit(self) -> str:
        """Gets the unit of this Nutrient.

        Units  # noqa: E501

        :return: The unit of this Nutrient.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit: str):
        """Sets the unit of this Nutrient.

        Units  # noqa: E501

        :param unit: The unit of this Nutrient.
        :type unit: str
        """

        self._unit = unit
